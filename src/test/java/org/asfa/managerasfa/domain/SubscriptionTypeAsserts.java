package org.asfa.managerasfa.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubscriptionTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionTypeAllPropertiesEquals(SubscriptionType expected, SubscriptionType actual) {
        assertSubscriptionTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertSubscriptionTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionTypeAllUpdatablePropertiesEquals(SubscriptionType expected, SubscriptionType actual) {
        assertSubscriptionTypeUpdatableFieldsEquals(expected, actual);
        assertSubscriptionTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionTypeAutoGeneratedPropertiesEquals(SubscriptionType expected, SubscriptionType actual) {
        assertThat(expected)
            .as("Verify SubscriptionType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionTypeUpdatableFieldsEquals(SubscriptionType expected, SubscriptionType actual) {
        assertThat(expected)
            .as("Verify SubscriptionType relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getSummary()).as("check summary").isEqualTo(actual.getSummary()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubscriptionTypeUpdatableRelationshipsEquals(SubscriptionType expected, SubscriptionType actual) {
        // empty method
    }
}
